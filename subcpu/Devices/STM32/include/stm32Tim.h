/*
 * Copyright (c) 2018 zhtlab
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files
 * (the "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to permit
 * persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

#ifndef _STM32TIM_H_
#define _STM32TIM_H_


typedef struct {
  __IO uint32_t	CR1;		/* 0x00 1, 2, 3, 15 */
#define TIM_CR1_UIFREMAP_SHIFT	11
#define TIM_CR1_UIFREMAP_MASK	(1 << (TIM_CR1_UIFREMAP_SHIFT))
#define TIM_CR1_UIFREMAP_NO	(0 << (TIM_CR1_UIFREMAP_SHIFT))
#define TIM_CR1_UIFREMAP_YES	(1 << (TIM_CR1_UIFREMAP_SHIFT))
#define TIM_CR1_CKD_SHIFT	8
#define TIM_CR1_CKD_MASK	(3 << (TIM_CR1_CKD_SHIFT))
#define TIM_CR1_CKD_DIV1	(0 << (TIM_CR1_CKD_SHIFT))
#define TIM_CR1_CKD_DIV2	(1 << (TIM_CR1_CKD_SHIFT))
#define TIM_CR1_CKD_DIV4	(2 << (TIM_CR1_CKD_SHIFT))
#define TIM_CR1_CKD_RESERVED	(3 << (TIM_CR1_CKD_SHIFT))
#define TIM_CR1_ARPE_SHIFT	7
#define TIM_CR1_ARPE_MASK	(1 << (TIM_CR1_ARPE_SHIFT))
#define TIM_CR1_ARPE_NO		(0 << (TIM_CR1_ARPE_SHIFT))
#define TIM_CR1_ARPE_YES	(1 << (TIM_CR1_ARPE_SHIFT))
#define TIM_CR1_CMS_SHIFT	5
#define TIM_CR1_CMS_MASK	(3 << (TIM_CR1_CMS_SHIFT))
#define TIM_CR1_CMS_EDGEALIGN   (0 << (TIM_CR1_CMS_SHIFT))
#define TIM_CR1_CMS_CENTERALIGN1 1 << (TIM_CR1_CMS_SHIFT))
#define TIM_CR1_CMS_CENTERALIGN2 (2 << (TIM_CR1_CMS_SHIFT))
#define TIM_CR1_CMS_CENTERALIGN3 (3 << (TIM_CR1_CMS_SHIFT))
#define TIM_CR1_DIR_SHIFT	4
#define TIM_CR1_DIR_MASK	(1 << (TIM_CR1_DIR_SHIFT))
#define TIM_CR1_DIR_UP		(0 << (TIM_CR1_DIR_SHIFT))
#define TIM_CR1_DIR_DOWN	(1 << (TIM_CR1_DIR_SHIFT))
#define TIM_CR1_OPM_SHIFT	3
#define TIM_CR1_OPM_MASK	(1 << (TIM_CR1_OPM_SHIFT))
#define TIM_CR1_OPM_NO		(0 << (TIM_CR1_OPM_SHIFT))
#define TIM_CR1_OPM_YES		(1 << (TIM_CR1_OPM_SHIFT))
#define TIM_CR1_URS_SHIFT	2
#define TIM_CR1_URS_MASK	(1 << (TIM_CR1_URS_SHIFT))
#define TIM_CR1_URS_NO		(0 << (TIM_CR1_URS_SHIFT))
#define TIM_CR1_URS_YES		(1 << (TIM_CR1_URS_SHIFT))
#define TIM_CR1_UDIS_SHIFT	1
#define TIM_CR1_UDIS_MASK	(1 << (TIM_CR1_UDIS_SHIFT))
#define TIM_CR1_UDIS_NO		(0 << (TIM_CR1_UDIS_SHIFT))
#define TIM_CR1_UDIS_YES	(1 << (TIM_CR1_UDIS_SHIFT))
#define TIM_CR1_CEN_SHIFT	0
#define TIM_CR1_CEN_MASK	(1 << (TIM_CR1_CEN_SHIFT))
#define TIM_CR1_CEN_NO		(0 << (TIM_CR1_CEN_SHIFT))
#define TIM_CR1_CEN_YES		(1 << (TIM_CR1_CEN_SHIFT))

  __IO uint32_t	CR2;		/* 0x04 1, 2, 3, 15 */
#define TIM_CR2_TI1S_SHIFT	7
#define TIM_CR2_TI1S_MASK	(1 << (TIM_CR2_TI1S_SHIFT))
#define TIM_CR2_TI1S_CH1	(0 << (TIM_CR2_TI1S_SHIFT))
#define TIM_CR2_TI1S_CH123XOR	(1 << (TIM_CR2_TI1S_SHIFT))
#define TIM_CR2_MMS_SHIFT	4
#define TIM_CR2_MMS_MASK	(7 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_RESET	(0 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_ENABLE	(1 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_UPDATE	(2 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_COMPARE_PULSE	(3 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_COMPARE_OC1REF	(4 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_COMPARE_OC2REF	(5 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_COMPARE_OC3REF	(6 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_MMS_COMPARE_OC4REF	(7 << (TIM_CR2_MMS_SHIFT))
#define TIM_CR2_CCDS_SHIFT	3
#define TIM_CR2_CCDS_MASK	(1 << (TIM_CR2_CCDS_SHIFT))
#define TIM_CR2_CCDS_CC		(0 << (TIM_CR2_CCDS_SHIFT))
#define TIM_CR2_CCDS_UPDATE	(1 << (TIM_CR2_CCDS_SHIFT))

  __IO uint32_t	SMCR;		/* 0x08 1, 2, 3, 15 */
#define TIM_SMCR_SMS3_SHIFT	16
#define TIM_SMCR_SMS3_MASK	(1 << (TIM_SMCR_SMS3_SHIFT))
#define TIM_SMCR_ETP_SHIFT	15
#define TIM_SMCR_ETP_MASK	(1 << (TIM_SMCR_ETP_SHIFT))
#define TIM_SMCR_ETP_RISING	(0 << (TIM_SMCR_ETP_SHIFT))
#define TIM_SMCR_ETP_FALLING	(1 << (TIM_SMCR_ETP_SHIFT))
#define TIM_SMCR_ECE_SHIFT	14
#define TIM_SMCR_ECE_MASK	(1 << (TIM_SMCR_ECE_SHIFT))
#define TIM_SMCR_ECE_MODE2DIS	(0 << (TIM_SMCR_ECE_SHIFT))
#define TIM_SMCR_ECE_MODE2EN	(1 << (TIM_SMCR_ECE_SHIFT))
#define TIM_SMCR_ETPS_SHIFT	12
#define TIM_SMCR_ETPS_MASK	(3 << (TIM_SMCR_ETPS_SHIFT))
#define TIM_SMCR_ETPS_DIV1	(0 << (TIM_SMCR_ETPS_SHIFT))
#define TIM_SMCR_ETPS_DIV2	(1 << (TIM_SMCR_ETPS_SHIFT))
#define TIM_SMCR_ETPS_DIV4	(2 << (TIM_SMCR_ETPS_SHIFT))
#define TIM_SMCR_ETPS_DIV8	(3 << (TIM_SMCR_ETPS_SHIFT))
#define TIM_SMCR_ETF_SHIFT	8
#define TIM_SMCR_ETF_MASK	(0xf << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_NO_FLT	(0 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_CKINT_N2	(1 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_CKINT_N4	(2 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_CKINT_N8	(3 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS2_N6	(4 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS2_N8	(5 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS4_N6	(6 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS4_N8	(7 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS8_N6	(8 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS8_N8	(9 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS16_N5	(10 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS16_N6	(11 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS16_N8	(12 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS32_N5	(13 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS32_N6	(14 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_ETF_DTS32_N8	(15 << (TIM_SMCR_ETF_SHIFT))
#define TIM_SMCR_MSM_SHIFT	7
#define TIM_SMCR_MSM_MASK	(1 << (TIM_SMCR_MSM_SHIFT))
#define TIM_SMCR_MSM_NONE 	(0 << (TIM_SMCR_MSM_SHIFT))
#define TIM_SMCR_MSM_SYNC	(1 << (TIM_SMCR_MSM_SHIFT))
#define TIM_SMCR_TS_SHIFT	4
#define TIM_SMCR_TS_MASK	(0x7 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_ITR0	(0 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_ITR1	(1 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_ITR2	(2 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_ITR3	(3 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_TI1F_ED	(4 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_TI1FP1	(5 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_TI2FP2	(6 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_TS_ETRF	(7 << (TIM_SMCR_TS_SHIFT))
#define TIM_SMCR_OCCS_SHIFT	3
#define TIM_SMCR_OCCS_MASK	(1 << (TIM_SMCR_OCCS_SHIFT))
#define TIM_SMCR_OCCS_OCREF	(0 << (TIM_SMCR_OCCS_SHIFT))
#define TIM_SMCR_OCCS_ETRF	(1 << (TIM_SMCR_OCCS_SHIFT))
#define TIM_SMCR_SMS_SHIFT	0
#define TIM_SMCR_SMS_MASK	(0x10007 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_INTCLK	(0 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_ENC1	(1 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_ENC2	(2 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_ENC3	(3 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_RESET	(4 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_GATED	(5 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_TRIGGER	(6 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_EXT1	(7 << (TIM_SMCR_SMS_SHIFT))
#define TIM_SMCR_SMS_COMBINED	(0x10000 << (TIM_SMCR_SMS_SHIFT))

  __IO uint32_t	DIER;		/* 0x0c 1, 2, 3, 15 */
#define TIM_DIER_TDE_SHIFT	14
#define TIM_DIER_TDE_MASK	(1 << (TIM_DIER_TDE_SHIFT))
#define TIM_DIER_TDE_NO		(0 << (TIM_DIER_TDE_SHIFT))
#define TIM_DIER_TDE_YES	(1 << (TIM_DIER_TDE_SHIFT))
#define TIM_DIER_CC4DE_SHIFT	12
#define TIM_DIER_CC4DE_MASK	(1 << (TIM_DIER_CC4DE_SHIFT))
#define TIM_DIER_CC4DE_NO	(0 << (TIM_DIER_CC4DE_SHIFT))
#define TIM_DIER_CC4DE_YES	(1 << (TIM_DIER_CC4DE_SHIFT))
#define TIM_DIER_CC3DE_SHIFT	11
#define TIM_DIER_CC3DE_MASK	(1 << (TIM_DIER_CC3DE_SHIFT))
#define TIM_DIER_CC3DE_NO	(0 << (TIM_DIER_CC3DE_SHIFT))
#define TIM_DIER_CC3DE_YES	(1 << (TIM_DIER_CC3DE_SHIFT))
#define TIM_DIER_CC2DE_SHIFT	10
#define TIM_DIER_CC2DE_MASK	(1 << (TIM_DIER_CC2DE_SHIFT))
#define TIM_DIER_CC2DE_NO	(0 << (TIM_DIER_CC2DE_SHIFT))
#define TIM_DIER_CC2DE_YES	(1 << (TIM_DIER_CC2DE_SHIFT))
#define TIM_DIER_CC1DE_SHIFT	9
#define TIM_DIER_CC1DE_MASK	(1 << (TIM_DIER_CC1DE_SHIFT))
#define TIM_DIER_CC1DE_NO	(0 << (TIM_DIER_CC1DE_SHIFT))
#define TIM_DIER_CC1DE_YES	(1 << (TIM_DIER_CC1DE_SHIFT))
#define TIM_DIER_UDE_SHIFT	8
#define TIM_DIER_UDE_MASK	(1 << (TIM_DIER_UDE_SHIFT))
#define TIM_DIER_UDE_NO		(0 << (TIM_DIER_UDE_SHIFT))
#define TIM_DIER_UDE_YES	(1 << (TIM_DIER_UDE_SHIFT))
#define TIM_DIER_TIE_SHIFT	6
#define TIM_DIER_TIE_MASK	(1 << (TIM_DIER_TIE_SHIFT))
#define TIM_DIER_TIE_NO		(0 << (TIM_DIER_TIE_SHIFT))
#define TIM_DIER_TIE_YES	(1 << (TIM_DIER_TIE_SHIFT))
#define TIM_DIER_CC4IE_SHIFT	4
#define TIM_DIER_CC4IE_MASK	(1 << (TIM_DIER_CC4IE_SHIFT))
#define TIM_DIER_CC4IE_NO	(0 << (TIM_DIER_CC4IE_SHIFT))
#define TIM_DIER_CC4IE_YES	(1 << (TIM_DIER_CC4IE_SHIFT))
#define TIM_DIER_CC3IE_SHIFT	3
#define TIM_DIER_CC3IE_MAK	(1 << (TIM_DIER_CC3IE_SHIFT))
#define TIM_DIER_CC3IE_NO	(0 << (TIM_DIER_CC3IE_SHIFT))
#define TIM_DIER_CC3IE_YES	(1 << (TIM_DIER_CC3IE_SHIFT))
#define TIM_DIER_CC2IE_SHIFT	2
#define TIM_DIER_CC2IE_MASK	(1 << (TIM_DIER_CC2IE_SHIFT))
#define TIM_DIER_CC2IE_NO	(0 << (TIM_DIER_CC2IE_SHIFT))
#define TIM_DIER_CC2IE_YES	(1 << (TIM_DIER_CC2IE_SHIFT))
#define TIM_DIER_CC1IE_SHIFT	1
#define TIM_DIER_CC1IE_MASK	(1 << (TIM_DIER_CC1IE_SHIFT))
#define TIM_DIER_CC1IE_NO	(0 << (TIM_DIER_CC1IE_SHIFT))
#define TIM_DIER_CC1IE_YES	(1 << (TIM_DIER_CC1IE_SHIFT))
#define TIM_DIER_UIE_SHIFT	0
#define TIM_DIER_UIE_MASK	(1 << (TIM_DIER_UIE_SHIFT))
#define TIM_DIER_UIE_NO		(0 << (TIM_DIER_UIE_SHIFT))
#define TIM_DIER_UIE_YES	(1 << (TIM_DIER_UIE_SHIFT))

  __IO uint32_t	SR;		/* 0x10 1, 2, 3, 15 */
#define TIM_SR_CC4OF_SHIFT	12
#define TIM_SR_CC4OF_MASK	(1 << (TIM_SR_CC4OF_SHIFT))
#define TIM_SR_CC4OF_NO		(0 << (TIM_SR_CC4OF_SHIFT))
#define TIM_SR_CC4OF_YES	(1 << (TIM_SR_CC4OF_SHIFT))
#define TIM_SR_CC3OF_SHIFT	11
#define TIM_SR_CC3OF_MASK	(1 << (TIM_SR_CC3OF_SHIFT))
#define TIM_SR_CC3OF_NO		(0 << (TIM_SR_CC3OF_SHIFT))
#define TIM_SR_CC3OF_YES	(1 << (TIM_SR_CC3OF_SHIFT))
#define TIM_SR_CC2OF_SHIFT	10
#define TIM_SR_CC2OF_MASK	(1 << (TIM_SR_CC2OF_SHIFT))
#define TIM_SR_CC2OF_NO		(0 << (TIM_SR_CC2OF_SHIFT))
#define TIM_SR_CC2OF_YES	(1 << (TIM_SR_CC2OF_SHIFT))
#define TIM_SR_CC1OF_SHIFT	9
#define TIM_SR_CC1OF_MASK	(1 << (TIM_SR_CC1OF_SHIFT))
#define TIM_SR_CC1OF_NO		(0 << (TIM_SR_CC1OF_SHIFT))
#define TIM_SR_CC1OF_YES	(1 << (TIM_SR_CC1OF_SHIFT))
#define TIM_SR_TIF_SHIFT	6
#define TIM_SR_TIF_MASK		(1 << (TIM_SR_TIF_SHIFT))
#define TIM_SR_TIF_NO		(0 << (TIM_SR_TIF_SHIFT))
#define TIM_SR_TIF_YES		(1 << (TIM_SR_TIF_SHIFT))
#define TIM_SR_CC4IF_SHIFT	4
#define TIM_SR_CC4IF_MASK	(1 << (TIM_SR_CC4IF_SHIFT))
#define TIM_SR_CC4IF_NO		(0 << (TIM_SR_CC4IF_SHIFT))
#define TIM_SR_CC4IF_YES	(1 << (TIM_SR_CC4IF_SHIFT))
#define TIM_SR_CC3IF_SHIFT	3
#define TIM_SR_CC3IF_MASK	(1 << (TIM_SR_CC3IF_SHIFT))
#define TIM_SR_CC3IF_NO		(0 << (TIM_SR_CC3IF_SHIFT))
#define TIM_SR_CC3IF_YES	(1 << (TIM_SR_CC3IF_SHIFT))
#define TIM_SR_CC2IF_SHIFT	2
#define TIM_SR_CC2IF_MASK	(1 << (TIM_SR_CC2IF_SHIFT))
#define TIM_SR_CC2IF_NO		(0 << (TIM_SR_CC2IF_SHIFT))
#define TIM_SR_CC2IF_YES	(1 << (TIM_SR_CC2IF_SHIFT))
#define TIM_SR_CC1IF_SHIFT	1
#define TIM_SR_CC1IF_MASK	(1 << (TIM_SR_CC1IF_SHIFT))
#define TIM_SR_CC1IF_NO		(0 << (TIM_SR_CC1IF_SHIFT))
#define TIM_SR_CC1IF_YES	(1 << (TIM_SR_CC1IF_SHIFT))
#define TIM_SR_UIF_SHIFT	0
#define TIM_SR_UIF_MASK		(1 << (TIM_SR_UIF_SHIFT))
#define TIM_SR_UIF_NO		(0 << (TIM_SR_UIF_SHIFT))
#define TIM_SR_UIF_YES		(1 << (TIM_SR_UIF_SHIFT))

  __IO uint32_t	EGR;		/* 0x14 1, 2, 3, 15 */
#define TIM_EGR_TG_SHIFT	6
#define TIM_EGR_TG_MASK		(1 << (TIM_EGR_TG_SHIFT))
#define TIM_EGR_TG_NO		(0 << (TIM_EGR_TG_SHIFT))
#define TIM_EGR_TG_YES		(1 << (TIM_EGR_TG_SHIFT))
#define TIM_EGR_CC4G_SHIFT	4
#define TIM_EGR_CC4G_MASK	(1 << (TIM_EGR_CC4G_SHIFT))
#define TIM_EGR_CC4G_NO		(0 << (TIM_EGR_CC4G_SHIFT))
#define TIM_EGR_CC4G_YES	(1 << (TIM_EGR_CC4G_SHIFT))
#define TIM_EGR_CC3G_SHIFT	3
#define TIM_EGR_CC3G_MASK	(1 << (TIM_EGR_CC3G_SHIFT))
#define TIM_EGR_CC3G_NO		(0 << (TIM_EGR_CC3G_SHIFT))
#define TIM_EGR_CC3G_YES	(1 << (TIM_EGR_CC3G_SHIFT))
#define TIM_EGR_CC2G_SHIFT	2
#define TIM_EGR_CC2G_MASK	(1 << (TIM_EGR_CC2G_SHIFT))
#define TIM_EGR_CC2G_NO		(0 << (TIM_EGR_CC2G_SHIFT))
#define TIM_EGR_CC2G_YES	(1 << (TIM_EGR_CC2G_SHIFT))
#define TIM_EGR_CC1G_SHIFT	1
#define TIM_EGR_CC1G_MASK	(1 << (TIM_EGR_CC1G_SHIFT))
#define TIM_EGR_CC1G_NO		(0 << (TIM_EGR_CC1G_SHIFT))
#define TIM_EGR_CC1G_YES	(1 << (TIM_EGR_CC1G_SHIFT))
#define TIM_EGR_UG_SHIFT	0
#define TIM_EGR_UG_MASK		(1 << (TIM_EGR_UG_SHIFT))
#define TIM_EGR_UG_NO		(0 << (TIM_EGR_UG_SHIFT))
#define TIM_EGR_UG_YES		(1 << (TIM_EGR_UG_SHIFT))

  __IO uint32_t	CCMR1;		/* 0x18 1, 2, 3, 15 */
#define TIM_CCMR1_IC2F_SHIFT	12
#define TIM_CCMR1_IC2F_MASK	(0xf << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_NO_FLT	(0 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_CKINT_N2	(1 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_CKINT_N4	(2 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_CKINT_N8	(3 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS2_N6	(4 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS2_N8	(5 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS4_N6	(6 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS4_N8	(7 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS8_N6	(8 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS8_N8	(9 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS16_N5	(10 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS16_N6	(11 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS16_N8	(12 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS32_N5	(13 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS32_N6	(14 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2F_DTS32_N8	(15 << (TIM_CCMR1_IC2F_SHIFT))
#define TIM_CCMR1_IC2PSC_SHIFT	10
#define TIM_CCMR1_IC2PSC_MASK	(3 << (TIM_CCMR1_IC2PSC_SHIFT))
#define TIM_CCMR1_IC2PSC_DIV1	(0 << (TIM_CCMR1_IC2PSC_SHIFT))
#define TIM_CCMR1_IC2PSC_DIV2	(1 << (TIM_CCMR1_IC2PSC_SHIFT))
#define TIM_CCMR1_IC2PSC_DIV4	(2 << (TIM_CCMR1_IC2PSC_SHIFT))
#define TIM_CCMR1_IC2PSC_DIV8	(3 << (TIM_CCMR1_IC2PSC_SHIFT))
#define TIM_CCMR1_CC2S_SHIFT	8
#define TIM_CCMR1_CC2S_MASK	(3 << (TIM_CCMR1_CC2S_SHIFT))
#define TIM_CCMR1_CC2S_OUTPUT	(0 << (TIM_CCMR1_CC2S_SHIFT))
#define TIM_CCMR1_CC2S_TI2	(1 << (TIM_CCMR1_CC2S_SHIFT))
#define TIM_CCMR1_CC2S_TI1	(2 << (TIM_CCMR1_CC2S_SHIFT))
#define TIM_CCMR1_CC2S_TRC	(3 << (TIM_CCMR1_CC2S_SHIFT))
#define TIM_CCMR1_OC1M_SHIFT	4
#define TIM_CCMR1_OC1M_MASK	(0xf << (TIM_CCMR1_OC1M_SHIFT))
#define TIM_CCMR1_OC1M_PWM1	(6 << (TIM_CCMR1_OC1M_SHIFT))
#define TIM_CCMR1_OC1M_PWM2	(7 << (TIM_CCMR1_OC1M_SHIFT))
#define TIM_CCMR1_IC1F_SHIFT	4
#define TIM_CCMR1_IC1F_MASK	(0xf << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_NO_FLT	(0 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_CKINT_N2	(1 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_CKINT_N4	(2 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_CKINT_N8	(3 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS2_N6	(4 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS2_N8	(5 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS4_N6	(6 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS4_N8	(7 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS8_N6	(8 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS8_N8	(9 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS16_N5	(10 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS16_N6	(11 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS16_N8	(12 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS32_N5	(13 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS32_N6	(14 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1F_DTS32_N8	(15 << (TIM_CCMR1_IC1F_SHIFT))
#define TIM_CCMR1_IC1PSC_SHIFT	2
#define TIM_CCMR1_IC1PSC_MASK	(3 << (TIM_CCMR1_IC1PSC_SHIFT))
#define TIM_CCMR1_IC1PSC_DIV1	(0 << (TIM_CCMR1_IC1PSC_SHIFT))
#define TIM_CCMR1_IC1PSC_DIV2	(1 << (TIM_CCMR1_IC1PSC_SHIFT))
#define TIM_CCMR1_IC1PSC_DIV4	(2 << (TIM_CCMR1_IC1PSC_SHIFT))
#define TIM_CCMR1_IC1PSC_DIV8	(3 << (TIM_CCMR1_IC1PSC_SHIFT))
#define TIM_CCMR1_CC1S_SHIFT	0
#define TIM_CCMR1_CC1S_MASK	(3 << (TIM_CCMR1_CC1S_SHIFT))
#define TIM_CCMR1_CC1S_OUTPUT	(0 << (TIM_CCMR1_CC1S_SHIFT))
#define TIM_CCMR1_CC1S_TI1	(1 << (TIM_CCMR1_CC1S_SHIFT))
#define TIM_CCMR1_CC1S_TI2	(2 << (TIM_CCMR1_CC1S_SHIFT))
#define TIM_CCMR1_CC1S_TRC	(3 << (TIM_CCMR1_CC1S_SHIFT))
  
  __IO uint32_t	CCMR2;		/* 0x1c 1, 2, 3, 15 */
#define TIM_CCMR2_IC4F_SHIFT	12
#define TIM_CCMR2_IC4F_MASK	(0xf << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_NO_FLT	(0 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_CKINT_N2	(1 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_CKINT_N4	(2 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_CKINT_N8	(3 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS2_N6	(4 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS2_N8	(5 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS4_N6	(6 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS4_N8	(7 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS8_N6	(8 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS8_N8	(9 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS16_N5	(10 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS16_N6	(11 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS16_N8	(12 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS32_N5	(13 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS32_N6	(14 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4F_DTS32_N8	(15 << (TIM_CCMR2_IC4F_SHIFT))
#define TIM_CCMR2_IC4PSC_SHIFT	10
#define TIM_CCMR2_IC4PSC_MASK	(3 << (TIM_CCMR2_IC4PSC_SHIFT))
#define TIM_CCMR2_IC4PSC_DIV1	(0 << (TIM_CCMR2_IC4PSC_SHIFT))
#define TIM_CCMR2_IC4PSC_DIV2	(1 << (TIM_CCMR2_IC4PSC_SHIFT))
#define TIM_CCMR2_IC4PSC_DIV4	(2 << (TIM_CCMR2_IC4PSC_SHIFT))
#define TIM_CCMR2_IC4PSC_DIV8	(3 << (TIM_CCMR2_IC4PSC_SHIFT))
#define TIM_CCMR2_CC4S_SHIFT	8
#define TIM_CCMR2_CC4S_MASK	(3 << (TIM_CCMR2_CC4S_SHIFT))
#define TIM_CCMR2_CC4S_OUTPUT	(0 << (TIM_CCMR2_CC4S_SHIFT))
#define TIM_CCMR2_CC4S_TI4	(1 << (TIM_CCMR2_CC4S_SHIFT))
#define TIM_CCMR2_CC4S_TI3	(2 << (TIM_CCMR2_CC4S_SHIFT))
#define TIM_CCMR2_CC4S_TRC	(3 << (TIM_CCMR2_CC4S_SHIFT))
#define TIM_CCMR2_IC3F_SHIFT	4
#define TIM_CCMR2_IC3F_MASK	(0xf << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_NO_FLT	(0 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_CKINT_N2	(1 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_CKINT_N4	(2 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_CKINT_N8	(3 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS2_N6	(4 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS2_N8	(5 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS4_N6	(6 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS4_N8	(7 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS8_N6	(8 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS8_N8	(9 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS16_N5	(10 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS16_N6	(11 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS16_N8	(12 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS32_N5	(13 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS32_N6	(14 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3F_DTS32_N8	(15 << (TIM_CCMR2_IC3F_SHIFT))
#define TIM_CCMR2_IC3PSC_SHIFT	2
#define TIM_CCMR2_IC3PSC_MASK	(3 << (TIM_CCMR2_IC3PSC_SHIFT))
#define TIM_CCMR2_IC3PSC_DIV1	(0 << (TIM_CCMR2_IC3PSC_SHIFT))
#define TIM_CCMR2_IC3PSC_DIV2	(1 << (TIM_CCMR2_IC3PSC_SHIFT))
#define TIM_CCMR2_IC3PSC_DIV4	(2 << (TIM_CCMR2_IC3PSC_SHIFT))
#define TIM_CCMR2_IC3PSC_DIV8	(3 << (TIM_CCMR2_IC3PSC_SHIFT))
#define TIM_CCMR2_CC3S_SHIFT	0
#define TIM_CCMR2_CC3S_MASK	(3 << (TIM_CCMR2_CC3S_SHIFT))
#define TIM_CCMR2_CC3S_OUTPUT	(0 << (TIM_CCMR2_CC3S_SHIFT))
#define TIM_CCMR2_CC3S_TI3	(1 << (TIM_CCMR2_CC3S_SHIFT))
#define TIM_CCMR2_CC3S_TI4	(2 << (TIM_CCMR2_CC3S_SHIFT))
#define TIM_CCMR2_CC3S_TRC	(3 << (TIM_CCMR2_CC3S_SHIFT))

  __IO uint32_t	CCER;		/* 0x20 1, 2, 3, 15 */
#define TIM_CCER_CC4NP_SHIFT	15
#define TIM_CCER_CC4NP_MASK     (1 << (TIM_CCER_CC4NP_SHIFT))
#define TIM_CCER_CC4NP_NO	(0 << (TIM_CCER_CC4NP_SHIFT))
#define TIM_CCER_CC4NP_YES	(1 << (TIM_CCER_CC4NP_SHIFT))
#define TIM_CCER_CC4P_SHIFT	13
#define TIM_CCER_CC4P_MASK	(1 << (TIM_CCER_CC4P_SHIFT))
#define TIM_CCER_CC4P_NO	(0 << (TIM_CCER_CC4P_SHIFT))
#define TIM_CCER_CC4P_YES	(1 << (TIM_CCER_CC4P_SHIFT))
#define TIM_CCER_CC4E_SHIFT	12
#define TIM_CCER_CC4E_MASK	(1 << (TIM_CCER_CC4E_SHIFT))
#define TIM_CCER_CC4E_NO	(0 << (TIM_CCER_CC4E_SHIFT))
#define TIM_CCER_CC4E_YES	(1 << (TIM_CCER_CC4E_SHIFT))
#define TIM_CCER_CC3NP_SHIFT	1
#define TIM_CCER_CC3NP_MASK	(1 << (TIM_CCER_CC3NP_SHIFT))
#define TIM_CCER_CC3NP_NO	(0 << (TIM_CCER_CC3NP_SHIFT))
#define TIM_CCER_CC3NP_YES	(1 << (TIM_CCER_CC3NP_SHIFT))
#define TIM_CCER_CC3P_SHIFT	9
#define TIM_CCER_CC3P_MASK	(1 << (TIM_CCER_CC3P_SHIFT))
#define TIM_CCER_CC3P_NO	(0 << (TIM_CCER_CC3P_SHIFT))
#define TIM_CCER_CC3P_YES	(1 << (TIM_CCER_CC3P_SHIFT))
#define TIM_CCER_CC3E_SHIFT	8
#define TIM_CCER_CC3E_MASK	(1 << (TIM_CCER_CC3E_SHIFT))
#define TIM_CCER_CC3E_NO	(0 << (TIM_CCER_CC3E_SHIFT))
#define TIM_CCER_CC3E_YES	(1 << (TIM_CCER_CC3E_SHIFT))
#define TIM_CCER_CC2NP_SHIFT	7
#define TIM_CCER_CC2NP_MASK	(1 << (TIM_CCER_CC2NP_SHIFT))
#define TIM_CCER_CC2NP_NO	(0 << (TIM_CCER_CC2NP_SHIFT))
#define TIM_CCER_CC2NP_YES	(1 << (TIM_CCER_CC2NP_SHIFT))
#define TIM_CCER_CC2P_SHIFT	5
#define TIM_CCER_CC2P_MASK	(1 << (TIM_CCER_CC2P_SHIFT))
#define TIM_CCER_CC2P_NO	(0 << (TIM_CCER_CC2P_SHIFT))
#define TIM_CCER_CC2P_YES	(1 << (TIM_CCER_CC2P_SHIFT))
#define TIM_CCER_CC2E_SHIFT	4
#define TIM_CCER_CC2E_MASK	(1 << (TIM_CCER_CC2E_SHIFT))
#define TIM_CCER_CC2E_NO	(0 << (TIM_CCER_CC2E_SHIFT))
#define TIM_CCER_CC2E_YES	(1 << (TIM_CCER_CC2E_SHIFT))
#define TIM_CCER_CC1NP_SHIFT	3
#define TIM_CCER_CC1NP_MASK	(1 << (TIM_CCER_CC1NP_SHIFT))
#define TIM_CCER_CC1NP_NO	(0 << (TIM_CCER_CC1NP_SHIFT))
#define TIM_CCER_CC1NP_YES	(1 << (TIM_CCER_CC1NP_SHIFT))
#define TIM_CCER_CC1P_SHIFT	1
#define TIM_CCER_CC1P_MASK	(1 << (TIM_CCER_CC1P_SHIFT))
#define TIM_CCER_CC1P_NO	(0 << (TIM_CCER_CC1P_SHIFT))
#define TIM_CCER_CC1P_YES	(1 << (TIM_CCER_CC1P_SHIFT))
#define TIM_CCER_CC1E_SHIFT	0
#define TIM_CCER_CC1E_MASK	(1 << (TIM_CCER_CC1E_SHIFT))
#define TIM_CCER_CC1E_NO	(0 << (TIM_CCER_CC1E_SHIFT))
#define TIM_CCER_CC1E_YES	(1 << (TIM_CCER_CC1E_SHIFT))

  __IO uint32_t	CNT;		/* 0x24 1, 2, 3, 15 */
#define CNT_UIFCPY_SHIFT	15
#define CNT_UIFCPY_MASK		(1 << (CNT_UIFCPY_SHIFT))
#define CNT_UIFCPY_NO		(0 << (CNT_UIFCPY_SHIFT))
#define CNT_UIFCPY_YES		(1 << (CNT_UIFCPY_SHIFT))

  __IO uint32_t	PSC;		/* 0x28 1, 2, 3, 15 */
  __IO uint32_t	ARR;		/* 0x2c 1, 2, 3, 15 */
  __IO uint32_t	RCR;		/* 0x30 1,       15 */
  __IO uint32_t	CCR1;		/* 0x34 1, 2, 3, 15 */
  __IO uint32_t	CCR2;		/* 0x38 1, 2, 3, 15 */
  __IO uint32_t	CCR3;		/* 0x3c 1, 2, 3     */
  __IO uint32_t	CCR4;	        /* 0x40 1, 2, 3     */
  __IO uint32_t	BDTR;	        /* 0x44 1,       15 */
#define TIM_BDTR_MOE_SHIFT      15
#define TIM_BDTR_MOE_MASK       (1 << (TIM_BDTR_MOE_SHIFT))
#define TIM_BDTR_MOE_NO	        (0 << (TIM_BDTR_MOE_SHIFT))
#define TIM_BDTR_MOE_YES        (1 << (TIM_BDTR_MOE_SHIFT))

  __IO uint32_t DCR;            /* 0x48 1,       15 */
  __IO uint32_t DMAR;           /* 0x4c 1, 2, 3, 15 */
  __IO uint32_t OR1;            /* 0x50 1, 2, 3, 15 */
#define TIM_OR1_TI4RMP_SHIFT    2
#define TIM_OR1_TI4RMP_MASK     (1 << (TIM_OR1_TI4RMP_SHIFT))
#define TIM_OR1_TI4RMP_IO       (0 << (TIM_OR1_TI4RMP_SHIFT))
#define TIM_OR1_TI4RMP_COMP1OUT (0 << (TIM_OR1_TI4RMP_SHIFT))
#define TIM_OR1_TI4RMP_COMP2OUT (0 << (TIM_OR1_TI4RMP_SHIFT))
#define TIM_OR1_TI4RMP_COMP12OUT_OR (0 << (TIM_OR1_TI4RMP_SHIFT))
#define TIM_OR1_ETR1RMP_SHIFT   1
#define TIM_OR1_ETR1RMP_MASK    (1 << (TIM_OR1_ETR1RMP_SHIFT))
#define TIM_OR1_ETR1RMP_IO      (0 << (TIM_OR1_ETR1RMP_SHIFT))
#define TIM_OR1_ETR1RMP_LSE     (1 << (TIM_OR1_ETR1RMP_SHIFT))
#define TIM_OR1_ITR1RMP_SHIFT   0
#define TIM_OR1_ITR1RMP_MASK    (1 << (TIM_OR1_ITR1RMP_SHIFT))
#define TIM_OR1_ITR1RMP_TIM2ITR1 (0 << (TIM_OR1_ITR1RMP_SHIFT))
#define TIM_OR1_ITR1RMP_USBSOF  (1 << (TIM_OR1_ITR1RMP_SHIFT))

  __IO uint32_t	CCMR3;	        /* 0x54 1,          */
  __IO uint32_t	CCR5;	        /* 0x58 1,          */
  __IO uint32_t	CCR6;	        /* 0x5c 1,          */
  __IO uint32_t	OR2;	        /* 0x60 1, 2, 3, 15 */
#define TIM_OR2_ETRSEL_SHIFT    0
#define TIM_OR2_ETRSEL_MASK     (1 << (TIM_OR2_ETRSEL_SHIFT))
#define TIM_OR2_ETRSEL_ETR1TMP  (0 << (TIM_OR2_ETRSEL_SHIFT))
#define TIM_OR2_ETRSEL_COMP1OUT (1 << (TIM_OR2_ETRSEL_SHIFT))
#define TIM_OR2_ETRSEL_COMP2OUT (2 << (TIM_OR2_ETRSEL_SHIFT))

  __IO uint32_t	OR3;		/* 0x64 1,          */

  __IO uint32_t TISEL;          /* 0x68 1,          */
} stm32Dev_TIM;


#endif
